
#include <Servo.h>
#include <Arduino.h>
#include <Wire.h>        // Instantiate the Wire library
#include <TFLI2C.h>      // TFLuna-I2C Library v.0.1.1



int distance;          //Necessary vars for sonar readings, setting speeds, etc.

Servo motor;            //Create ESC drive motor 'motor' and steering servo 'steer'
Servo steer;

int speedRead;          //Vars necessary to control the speed of the motor via the ESC.
int speedRemap;
int motorSpeed;
int forwardSpeed=1570;
int brakeSpeed=1100;
int reverseSpeed=1400;
int speedCenter = 1500;

const int neutral = 90;           //Steering servo positions for straight, left turns, and right turns. These can be changed and are set in degrees.
const int steerRight = 55;
const int steerLeft = 125;

TFLI2C tflI2C;

int16_t  tfDist;    // distance in centimeters
int16_t  tfAddr = TFL_DEF_ADR;  // Use this default I2C address

void setup() {
  Serial.begin(9600);             //Begins //Serial Monitor for debugging
  Wire.begin();           // Initalize Wire library
  motor.attach(2, 1000, 2000);           //drive motor
  steer.attach(3);                      //steering motor
  //Serial.println("MOTOR ATTACHED");       //Prints a message for debug
  delay(500);
}



int lunaDistance(){
  if(tflI2C.getData(tfDist, tfAddr)){
    return tfDist;
  }
  return-1;
}
void rightTurn() {              //Function called to execute a short, right turn to get away from a wall
  steer.write(steerRight);
  motor.writeMicroseconds(forwardSpeed);
  delay(50);
  steer.write(neutral);
  //Serial.println("RIGHT TURN");

}

void leftTurn() {               //Function called to execute a short, left turn to get away from a wall
  steer.write(steerLeft);
  motor.writeMicroseconds(forwardSpeed);
  delay(50);
  steer.write(neutral);
  //Serial.println("LEFT TURN");
}

void longLeftTurn() {           //Function called to execute a long, left turn when a wall is detected by the front sensor. Should be approximately 90 degrees.
  steer.write(steerLeft);
  motor.writeMicroseconds(forwardSpeed);
  delay(475);
  steer.write(neutral);
  //Serial.println("LONG LEFT");
}

void longRightTurn() {          //Function called to execute a long, right turn when a wall is detected by the front sensor. Should be approximately 90 degrees.
  steer.write(steerRight);
  motor.writeMicroseconds(forwardSpeed);
  delay(475);
  steer.write(neutral);
  //Serial.println("LONG RIGHT");
}

void frontLeftTurn() {          //Function called to execute a 45 degree right turn when the front left sensor is triggered.
  steer.write(steerLeft);
  motor.writeMicroseconds(forwardSpeed);
  delay(90);
  steer.write(neutral);
  //Serial.println("FRONT LEFT TURN");
}

void frontRightTurn() {         //Function called to execute a 45 degree right turn when the front left sensor is triggered.
  steer.write(steerRight);
  motor.writeMicroseconds(forwardSpeed);
  delay(90);
  steer.write(neutral);
  //Serial.println("FRONT RIGHT TURN");
}

void loop() {
  steer.write(neutral);
  motor.writeMicroseconds(forwardSpeed);
  delay(8); 
  distance=lunaDistance();
  Serial.println(String(distance));                            //is present before turning. This has a negligible impact on reading performance, and I used a similar structure for the readSidesAndFront() function above.
  if ((distance<80)&&(distance!=-1)) {
    motor.writeMicroseconds(brakeSpeed);
    delay(1000);
    motor.writeMicroseconds(1500);
    delay(1000);
    motor.writeMicroseconds(reverseSpeed);
    delay(4000);
    exit(0);
  
  }
}
