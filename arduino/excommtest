
#include <MPU6050_tockn.h>
#include <Servo.h>
#include <Arduino.h>
#include <Wire.h>        // Instantiate the Wire library
#include <TFLI2C.h>  

int distancef;          //Necessary vars for sonar readings, setting speeds, etc.
int distancel;

TFLI2C tflI2C;
Servo motor;            //Create ESC drive motor 'motor' and steering servo 'steer'
Servo steer;


int16_t  tfDist;    // distance in centimeters
int16_t  tfAddrfront = TFL_DEF_ADR;  // Use this default I2C address 0
int16_t  tfAddrleft = 0x11;  // Use this default I2C address
int walldis = 70;

int speedRead;          //Vars necessary to control the speed of the motor via the ESC.
int speedRemap;
int motorSpeed;
int forwardSpeed=1570;
int brakeSpeed=1100;
int reverseSpeed=1400;
int speedCenter = 1500;

const int neutral = 90;           //Steering servo positions for straight, left turns, and right turns. These can be changed and are set in degrees.
const int steerRight = 55;
const int steerLeft = 125;

MPU6050 mpu6050(Wire);

double base;
void setup() {
  Serial.begin(115200);
  steer.attach(7);  
  Wire.begin();
  mpu6050.begin();  
  mpu6050.calcGyroOffsets(true);
  motor.attach(2, 1000, 2000);           //Attaches motor to pin 12
  delay(100);
  base=mpu6050.getAngleZ();
}
int lunaDistance(int16_t addr){
  if(tflI2C.getData(tfDist, addr)){
    return tfDist;
  }
  return-1;
}
void rightTurn() {              //Function called to execute a short, right turn to get away from a wall
  steer.write(steerRight);
  motor.writeMicroseconds(forwardSpeed);
  delay(50);
  steer.write(neutral);
  //Serial.println("RIGHT TURN");
}

void leftTurn() {               //Function called to execute a short, left turn to get away from a wall
  steer.write(steerLeft);
  motor.writeMicroseconds(forwardSpeed);
  delay(50);
  steer.write(neutral);
  //Serial.println("LEFT TURN");
}

void longLeftTurn() {           //Function called to execute a long, left turn when a wall is detected by the front sensor. Should be approximately 90 degrees.
  motor.writeMicroseconds(1550);
  steer.write(steerLeft);
  delay(1000);
  steer.write(neutral);
}

void longRightTurn() {          //Function called to execute a long, right turn when a wall is detected by the front sensor. Should be approximately 90 degrees.
  motor.writeMicroseconds(1550);
  steer.write(steerRight);
  delay(3000);
  steer.write(neutral);
}

void frontLeftTurn() {          //Function called to execute a 45 degree right turn when the front left sensor is triggered.
  motor.writeMicroseconds(forwardSpeed);
  steer.write(steerLeft);
  delay(90);
  steer.write(neutral);
  //Serial.println("FRONT LEFT TURN");
}

void frontRightTurn() {         //Function called to execute a 45 degree right turn when the front left sensor is triggered.
  steer.write(steerRight);
  motor.writeMicroseconds(forwardSpeed);
  delay(90);
  steer.write(neutral);
  //Serial.println("FRONT RIGHT TURN");
}
void brake(){
  motor.writeMicroseconds(brakeSpeed);
  delay(100);
  motor.writeMicroseconds(1500);
}
void leftCorrect(){
  steer.write(105);
  // steer.write(neutral);
}
void rightCorrect(){
  steer.write(75);
  // steer.write(neutral);
}
void left90(double base){
  motor.writeMicroseconds(1570);
  mpu6050.update();
  double angle=mpu6050.getAngleZ();
  while(angle>(base-85)){
    mpu6050.update();
    angle=mpu6050.getAngleZ(); 
    steer.write(155);
  }
  steer.write(neutral);

}
void keep_straight(double base){
  mpu6050.update();
  double angle=mpu6050.getAngleZ();
  if(angle<(base-2)){
    steer.write(75);
  }
  else if(angle>(base+2)){
    steer.write(109);
  }
  else steer.write(neutral);
}
bool start=true;
double angle;
int step=0;
int t;
bool loopcheck=true;
char input='1';
int stepper=0;
void loop() { 
  if(start){
    steer.write(neutral);
    motor.writeMicroseconds(1500);
    delay(100);
    start=false;
  }
  //if(Serial.available()>0){
    if(step==0){
      // input=Serial.read();
      // if(input=='0'){//takeoff      
        for(t=millis();millis()-t<=2000;){//move through box
          motor.writeMicroseconds(1570); 
          keep_straight(base);
        }
        brake();//stop outside box
        delay(200);
        step++;
      //}
    }
    else if(step==1){//wait for land
     // input=Serial.read();
     //if(input='1'){
      step++;
     //}
    }
    else if(step==2){//wait for takeoff
      // input=Serial.read();
      // if(input=='0'){
        for(t=millis();millis()-t<=1000;){//move freoward
          motor.writeMicroseconds(1570); 
          keep_straight(base);
        }
        brake();
        delay(100);
        step++;
        // left90(base);//turn
        // brake();
        // delay(100);
        // base=mpu6050.getAngleZ();
        // step++;
        // delay(2000);
     // }
    }
    else if(step==3){
      delay(100);
      left90(base);//turn
      brake();
      base=mpu6050.getAngleZ();
      delay(2000);
      step++;
    }
    else if(step==4){
      for(t=millis();millis()-t<=2000;){//move through box
        motor.writeMicroseconds(1570); 
        keep_straight(base);
      }
      brake();
      delay(500);
      step++;
    }
    else if(step==5){
      //if(input=='1'){
        step++;
      //}
    }
    else if(step==6) exit(0); 
// }
  if(step==6) exit(0);
}
